@model OrderCreateViewModel

<h2>Checkout</h2>

@if (ViewBag.CartItems != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.CartItems)
            {
                <tr>
                    <td>
                        <p>@item.Variant.Product.ProductName</p>
                        @if (item.Variant.Values != null)
                        {
                            foreach (var val in item.Variant.Values)
                            {
                                <p>@val.ValueText</p>
                            }
                        }
                        else
                        {
                            <p>No Spec</p>
                        }
                    </td>
                    <td>@item.Quantity</td>
                    <td>@if (item.Variant.DiscountedPrice != null)
                        {
                            <span class="text-danger">@item.Variant.DiscountedPrice TL</span>
                        }
                        else
                        {
                            <span>0.00 TL</span>
                        }
                    </td>
                    <td>@if (item.Variant.DiscountedPrice != null)
                        {
                            <span class="text-danger">@((decimal)item.Variant.DiscountedPrice * item.Quantity) TL</span>
                        }
                        else
                        {
                            <span>0.00 TL</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <p>Total Price: <span id="totalPrice">@Model.TotalPrice.ToString("C")</span></p>
    </div>
    <form method="post" asp-controller="Checkout" asp-action="PaymentPOST">
        
        <input type="hidden" asp-for="UserId" value="@Model.UserId" />
        <input type="hidden" asp-for="TotalPrice" value="@Model.TotalPrice" />
        
        
        
        <div>
            <label for="address">Address:</label>
            <input type="text" asp-for="Address" value="@Model.Address" required />
        </div>
        
        <div>
            <label for="cardNumber">Card Number:</label>
            <input type="text" asp-for="CardNumber" value="@Model.CardNumber" pattern="^[0-9]{16}$" title="Card number must be a 16-digit number." />
            @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary">Complete Order</button>
    </form>

    @section scripts {
        <script>
            // Initialize total price with the current values in the cart
            document.addEventListener("DOMContentLoaded", function () {
                calculateTotalPrice();
            });

            function calculateTotalPrice() {
                let totalPrice = 0;

                // Loop through each cart item and calculate the total price
                document.querySelectorAll('.table tbody tr').forEach(item => {
                    const quantity = parseInt(item.querySelector('td:nth-child(2)').innerText);
                    const discountedPriceText = item.querySelector('td:nth-child(3) span').innerText;
                    const discountedPrice = parseFloat(discountedPriceText.replace(' TL', ''));

                    totalPrice += quantity * discountedPrice;
                });

                // Update the total price in the form and the view
                document.getElementById('totalPrice').innerText = totalPrice.toFixed(2) + ' TL';
            }
        </script>
    }
}
else
{
    <p>Your cart is empty.</p>
}