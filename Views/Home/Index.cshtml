@model IEnumerable<Variant>
@inject SignInManager<AppUser> SignInManager
@inject eCommerce.Services.WishlistService WishlistService

<div class="container mt-5">
    <div class="row">
        @foreach(var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <a href="@Url.Action("Product", "Home", new { productId = item.ProductId })">
                        <img src="/@item.Pictures[0].Path" class="card-img-top" alt="@item.Product.ProductName">
                        <div class="card-body">
                            <h5 class="card-title">@item.Product.ProductName</h5>
                            <p class="card-text">
                                @if (item.DiscountedPrice != null)
                                {
                                    <del>@item.Price TL</del> <span class="text-danger">@item.DiscountedPrice TL</span>
                                }
                                else
                                {
                                    <span>@item.Price TL</span>
                                }
                            </p>
                        </div>
                    </a>
                    <div class="card-body">
                        @if (SignInManager.IsSignedIn(User)){
                            <button class="btn btn-outline-danger btn-sm float-start" onclick="toggleWishlist(@item.ProductId)">
                                <i id="wishlistIcon_@item.ProductId" class="heart-icon @if (WishlistService.IsInWishlist(item.Product.ProductId)) { <text>fas text-danger</text> } else { <text>far text-danger</text> } fa-heart"></i>
                                Add to Wishlist
                            </button>
                        }
                        
                        <button class="btn btn-primary btn-sm float-end" onclick="addToCart(@item.ProductId)">
                            Add to Cart
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        async function toggleWishlist(productId) {
            // Update the URL without the area name
            await fetch('User/Wishlist/ToggleWishlist?productId=' + productId, { method: 'POST' });

            // After toggling, update the heart icon and the count in the navbar
            updateWishlistIcon(productId);
            updateWishlistCount();
        }

        function updateWishlistIcon(productId) {
            const icon = document.getElementById(`wishlistIcon_${productId}`);
            icon.classList.toggle('far'); // Toggle unfilled heart
            icon.classList.toggle('fas'); // Toggle filled heart
        }

        function updateWishlistCount() {
            fetch('User/Wishlist/GetWishlistItemCount')
                .then(response => response.json())
                .then(count => {
                    document.getElementById('wishlistCount').innerText = count;
                });
        }

        

        function addToCart(productId) {
            // You can implement the logic to add to the cart here (e.g., send an AJAX request).
            alert('Added to Cart: ' + productId);
        }

        // Update the count when the page loads
        updateWishlistCount();
    </script>
}