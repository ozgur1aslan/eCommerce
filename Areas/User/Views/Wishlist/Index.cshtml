@model IEnumerable<WishlistItem>

<h2>Wishlist</h2>

@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="wishlistItem-@item.VariantId">
                    <td>
                        @if (item.Variant.Pictures != null && item.Variant.Pictures.Any())
                        {
                            <img src="/@item.Variant.Pictures.First().Path" class="img-fluid" width="100px">
                        }
                        else
                        {
                            <p>No Image</p>
                        }
                    </td>
                    <td>
                        <p>@item.Variant.Product.ProductName</p>

                        @if(item.Variant.Values != null) {
                            
                            @foreach(var val in item.Variant.Values){
                                
                                <p>
                                    @val.ValueText
                                </p>
                            }
                        }else {
                            <p>
                                No Spec                                
                            </p>
                        }
                        
                    </td>
                    @if (item.Variant.DiscountedPrice != null)
                                {
                                    <td>
                                        <del>@item.Variant.Price TL</del> <span class="text-danger">@item.Variant.DiscountedPrice TL</span>
                                    </td>
                                }
                                else
                                {
                                    <td>@item.Variant.Price TL</td>
                                }
                    <td>
                        <button class="btn btn-outline-danger btn-sm" onclick="removeFromWishlist(@item.VariantId)">Remove from Wishlist</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Your wishlist is empty.</p>
}



@section scripts {
    <script>
        async function removeFromWishlist(variantId) {
            // Update the URL with the correct path including the area
            await fetch('@Url.Action("RemoveFromWishlist", "Wishlist", new { area = "User" })?variantId=' + variantId, { method: 'POST' });

            // After removing, update the wishlist count and remove the item from the view
            updateWishlistCount();
            removeWishlistItem(variantId);
        }

        function removeWishlistItem(variantId) {
            // Remove the item from the view dynamically
            const wishlistItemElement = document.getElementById('wishlistItem-' + variantId);
            if (wishlistItemElement) {
                wishlistItemElement.remove();
            }
        }

        function updateWishlistCount() {
            // Update the URL with the correct path including the area
            fetch('@Url.Action("GetWishlistItemCount", "Wishlist", new { area = "User" })')
                .then(response => response.json())
                .then(count => {
                    document.getElementById('wishlistCount').innerText = count;
                });
        }

        function addToCart(variantId) {
            // You can implement the logic to add to the cart here (e.g., send an AJAX request).
            alert('Added to Cart: ' + variantId);
        }

    </script>
}